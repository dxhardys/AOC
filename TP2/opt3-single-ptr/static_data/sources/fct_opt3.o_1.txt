/usr/include/stdlib.h: 364 - 364
--------------------------------------------------------------------------------

364:   return (int) strtol (__nptr, (char **) NULL, 10);
/home/sofiane/AOC/tp-rendu/aoc-tp-2/opt3.c: 145 - 252
--------------------------------------------------------------------------------

145:     pos_val_t *max_val = &pv_grid->entries[0];  
146:     for (unsigned i = 1; i < pv_grid->nx * pv_grid->ny; i++) {
147:         if (pv_grid->entries[i].v1 > max_val->v1) {
148:             max_val = &pv_grid->entries[i];  
[...]
162:     pos_val_t *max_val = &pv_grid->entries[0];  
163:     for (unsigned i = 1; i < pv_grid->nx * pv_grid->ny; i++) {
164:         if (pv_grid->entries[i].v2 > max_val->v2) {
165:             max_val = &pv_grid->entries[i];  
[...]
179:     free(pv_grid.entries);
180:     sum_bytes -= pv_grid.nx * pv_grid.ny * sizeof(pos_val_t);
[...]
189:     free(val_grid.entries);
190:     sum_bytes -= val_grid.nx * val_grid.ny * sizeof(value_t);
[...]
196: {
197:    // Check arguments number
198:    if (argc < 4) {
199:       fprintf (stderr, "Usage: %s <nb repetitions> <nb points X> <nb points Y>\n", argv[0]);
200:       return EXIT_FAILURE;
201:    }
202: 
203:    // Read arguments from command line
204:    unsigned nrep = (unsigned) atoi (argv[1]);
205:    unsigned nx   = (unsigned) atoi (argv[2]);
206:    unsigned ny   = (unsigned) atoi (argv[3]);
207: 
208:    // Generate points and save them to a text file named "values.txt"
209:    const char *input_file_name = "values.txt";
210:    if (generate_random_values (input_file_name, nx, ny) != 0) {
211:       fprintf (stderr, "Failed to write %u x %u coordinates to %s\n",
212:                nx, ny, input_file_name);
213:       return EXIT_FAILURE;
214:    }
215: 
216:    sum_bytes = 0;
217: 
218:    // Main part: repeated nrep times
219:    unsigned r;
220:    for (r=0; r<nrep; r++) {
221:       value_grid_t value_grid;
222:       pos_val_grid_t pos_val_grid;
223: 
224:       // Load coordinates from disk to memory
225:       if (load_values (input_file_name, &value_grid) != 0) {
226:          fprintf (stderr, "Failed to load coordinates\n");
227:          return EXIT_FAILURE;
228:       }
229: 
230:       // Relate pairs to coordinates
231:       load_positions (value_grid, &pos_val_grid);
[...]
238:       printf ("Max v1: x=%u, y=%u, v1=%f\n",
239:               pos_v1_max->x, pos_v1_max->y, pos_v1_max->v1);
240:       printf ("Max v2: x=%u, y=%u, v2=%f\n",
[...]
249:    remove (input_file_name);
250: 
251:    return EXIT_SUCCESS;
252: }
/usr/include/x86_64-linux-gnu/bits/stdio2.h: 105 - 112
--------------------------------------------------------------------------------

105:   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
[...]
112:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
