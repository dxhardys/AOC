{
  "report": [
    {
      "id_str": "Loop 8 - baseline.o",
      "module": "baseline.o",
      "id": 8,
      "analysis": "Execution Time: 0 % - Vectorization Ratio: 5.88 % - Vector Length Use: 21.32 %",
      "coverage": 0.26111897826195,
      "issues": [
        {
          "id_str": "Loop Computation Issues",
          "score": 2,
          "issues": [
            {
              "code": "L2_LC_6",
              "analysis": "[SA] Presence of a large number of scalar integer instructions - Simplify loop structure, perform loop splitting or perform unroll and jam. This issue costs 2 points.",
              "score": 2,
            }
          ]
        },
        {
          "id_str": "Control Flow Issues",
          "score": 1,
          "issues": [
            {
              "code": "L2_CF_1",
              "analysis": "[SA] Presence of calls - Inline either by compiler or by hand and use SVML for libm calls. There are 1 issues (= calls) costing 1 point each.",
              "score": 1,
            }
          ]
        },
        {
          "id_str": "Data Access Issues",
          "score": 5,
          "issues": [
            {
              "code": "L2_DA_1",
              "analysis": "[SA] Presence of constant non unit stride data access - Use array restructuring, perform loop interchange or use gather instructions to lower a bit the cost. There are 1 issues ( = data accesses) costing 2 point each.",
              "score": 2,
            },
            {
              "code": "L2_DA_5",
              "analysis": "[SA] Presence of special instructions executing on a single port (INSERT/EXTRACT) - Simplify data access and try to get stride 1 access. There are 1 issues (= instructions) costing 1 point each.",
              "score": 1,
            },
            {
              "code": "L2_DA_6",
              "analysis": "[SA] More than 20% of the loads are accessing the stack - Perform loop splitting to decrease pressure on registers. This issue costs 2 points.",
              "score": 2,
            }
          ]
        },
        {
          "id_str": "Vectorization Roadblocks",
          "score": 3,
          "issues": [
            {
              "code": "L2_CF_1",
              "analysis": "[SA] Presence of calls - Inline either by compiler or by hand and use SVML for libm calls. There are 1 issues (= calls) costing 1 point each.",
              "score": 1,
            },
            {
              "code": "L2_DA_1",
              "analysis": "[SA] Presence of constant non unit stride data access - Use array restructuring, perform loop interchange or use gather instructions to lower a bit the cost. There are 1 issues ( = data accesses) costing 2 point each.",
              "score": 2,
            }
          ]
        },
        {
          "id_str": "Inefficient Vectorization",
          "score": 1,
          "issues": [
            {
              "code": "L2_DA_5",
              "analysis": "[SA] Presence of special instructions executing on a single port (INSERT/EXTRACT) - Simplify data access and try to get stride 1 access. There are 1 issues (= instructions) costing 1 point each.",
              "score": 1,
            }
          ]
        }
      ]
    },
    {
      "id_str": "Loop 9 - baseline.o",
      "module": "baseline.o",
      "id": 9,
      "analysis": "Execution Time: 0 % - Vectorization Ratio: 0.00 % - Vector Length Use: 21.38 %",
      "coverage": 0.20889516174793,
      "issues": [
        {
          "id_str": "Loop Computation Issues",
          "score": 2,
          "issues": [
            {
              "code": "L2_LC_6",
              "analysis": "[SA] Presence of a large number of scalar integer instructions - Simplify loop structure, perform loop splitting or perform unroll and jam. This issue costs 2 points.",
              "score": 2,
            }
          ]
        },
        {
          "id_str": "Control Flow Issues",
          "score": 1,
          "issues": [
            {
              "code": "L2_CF_1",
              "analysis": "[SA] Presence of calls - Inline either by compiler or by hand and use SVML for libm calls. There are 1 issues (= calls) costing 1 point each.",
              "score": 1,
            }
          ]
        },
        {
          "id_str": "Data Access Issues",
          "score": 24,
          "issues": [
            {
              "code": "L2_DA_1",
              "analysis": "[SA] Presence of constant non unit stride data access - Use array restructuring, perform loop interchange or use gather instructions to lower a bit the cost. There are 7 issues ( = data accesses) costing 2 point each.",
              "score": 14,
            },
            {
              "code": "L2_DA_2",
              "analysis": "[SA] Presence of indirect accesses - Use array restructuring or gather instructions to lower the cost. There are 1 issues ( = indirect data accesses) costing 4 point each.",
              "score": 4,
            },
            {
              "code": "L2_DA_5",
              "analysis": "[SA] Presence of special instructions executing on a single port (INSERT/EXTRACT) - Simplify data access and try to get stride 1 access. There are 4 issues (= instructions) costing 1 point each.",
              "score": 4,
            },
            {
              "code": "L2_DA_6",
              "analysis": "[SA] More than 20% of the loads are accessing the stack - Perform loop splitting to decrease pressure on registers. This issue costs 2 points.",
              "score": 2,
            }
          ]
        },
        {
          "id_str": "Vectorization Roadblocks",
          "score": 19,
          "issues": [
            {
              "code": "L2_CF_1",
              "analysis": "[SA] Presence of calls - Inline either by compiler or by hand and use SVML for libm calls. There are 1 issues (= calls) costing 1 point each.",
              "score": 1,
            },
            {
              "code": "L2_DA_1",
              "analysis": "[SA] Presence of constant non unit stride data access - Use array restructuring, perform loop interchange or use gather instructions to lower a bit the cost. There are 7 issues ( = data accesses) costing 2 point each.",
              "score": 14,
            },
            {
              "code": "L2_DA_2",
              "analysis": "[SA] Presence of indirect accesses - Use array restructuring or gather instructions to lower the cost. There are 1 issues ( = indirect data accesses) costing 4 point each.",
              "score": 4,
            }
          ]
        },
        {
          "id_str": "Inefficient Vectorization",
          "score": 4,
          "issues": [
            {
              "code": "L2_DA_5",
              "analysis": "[SA] Presence of special instructions executing on a single port (INSERT/EXTRACT) - Simplify data access and try to get stride 1 access. There are 4 issues (= instructions) costing 1 point each.",
              "score": 4,
            }
          ]
        }
      ]
    },
    {
      "id_str": "Loop 1 - baseline.o",
      "module": "baseline.o",
      "id": 1,
      "analysis": "Execution Time: 0 % - Vectorization Ratio: 0.00 % - Vector Length Use: 25.00 %",
      "coverage": 0.026111897081137,
      "issues": [
        {
          "id_str": "Control Flow Issues",
          "score": 1,
          "issues": [
            {
              "code": "L2_CF_1",
              "analysis": "[SA] Presence of calls - Inline either by compiler or by hand and use SVML for libm calls. There are 1 issues (= calls) costing 1 point each.",
              "score": 1,
            }
          ]
        },
        {
          "id_str": "Data Access Issues",
          "score": 2,
          "issues": [
            {
              "code": "L2_DA_1",
              "analysis": "[SA] Presence of constant non unit stride data access - Use array restructuring, perform loop interchange or use gather instructions to lower a bit the cost. There are 1 issues ( = data accesses) costing 2 point each.",
              "score": 2,
            }
          ]
        },
        {
          "id_str": "Vectorization Roadblocks",
          "score": 3,
          "issues": [
            {
              "code": "L2_CF_1",
              "analysis": "[SA] Presence of calls - Inline either by compiler or by hand and use SVML for libm calls. There are 1 issues (= calls) costing 1 point each.",
              "score": 1,
            },
            {
              "code": "L2_DA_1",
              "analysis": "[SA] Presence of constant non unit stride data access - Use array restructuring, perform loop interchange or use gather instructions to lower a bit the cost. There are 1 issues ( = data accesses) costing 2 point each.",
              "score": 2,
            }
          ]
        }
      ]
    },
    {
      "id_str": "Loop 3 - baseline.o",
      "module": "baseline.o",
      "id": 3,
      "analysis": "Execution Time: 0 % - Vectorization Ratio: 0.00 % - Vector Length Use: 25.00 %",
      "coverage": 0.017407931387424,
      "issues": [
        {
          "id_str": "Control Flow Issues",
          "score": 1,
          "issues": [
            {
              "code": "L2_CF_1",
              "analysis": "[SA] Presence of calls - Inline either by compiler or by hand and use SVML for libm calls. There are 1 issues (= calls) costing 1 point each.",
              "score": 1,
            }
          ]
        },
        {
          "id_str": "Data Access Issues",
          "score": 2,
          "issues": [
            {
              "code": "L2_DA_1",
              "analysis": "[SA] Presence of constant non unit stride data access - Use array restructuring, perform loop interchange or use gather instructions to lower a bit the cost. There are 1 issues ( = data accesses) costing 2 point each.",
              "score": 2,
            }
          ]
        },
        {
          "id_str": "Vectorization Roadblocks",
          "score": 3,
          "issues": [
            {
              "code": "L2_CF_1",
              "analysis": "[SA] Presence of calls - Inline either by compiler or by hand and use SVML for libm calls. There are 1 issues (= calls) costing 1 point each.",
              "score": 1,
            },
            {
              "code": "L2_DA_1",
              "analysis": "[SA] Presence of constant non unit stride data access - Use array restructuring, perform loop interchange or use gather instructions to lower a bit the cost. There are 1 issues ( = data accesses) costing 2 point each.",
              "score": 2,
            }
          ]
        }
      ]
    },
    {
      "id_str": "Loop 6 - baseline.o",
      "module": "baseline.o",
      "id": 6,
      "analysis": "Execution Time: 0 % - Vectorization Ratio: 8.00 % - Vector Length Use: 17.50 %",
      "coverage": 0.017407931387424,
      "issues": [
        {
          "id_str": "Loop Computation Issues",
          "score": 6,
          "issues": [
            {
              "code": "L2_LC_4",
              "analysis": "[SA] Less than 10% of the FP ADD/SUB/MUL arithmetic operations are performed using FMA - Reorganize arithmetic expressions to exhibit potential for FMA. This issue costs 4 points.",
              "score": 4,
            },
            {
              "code": "L2_LC_6",
              "analysis": "[SA] Presence of a large number of scalar integer instructions - Simplify loop structure, perform loop splitting or perform unroll and jam. This issue costs 2 points.",
              "score": 2,
            }
          ]
        },
        {
          "id_str": "Control Flow Issues",
          "score": 1,
          "issues": [
            {
              "code": "L2_CF_1",
              "analysis": "[SA] Presence of calls - Inline either by compiler or by hand and use SVML for libm calls. There are 1 issues (= calls) costing 1 point each.",
              "score": 1,
            }
          ]
        },
        {
          "id_str": "Vectorization Roadblocks",
          "score": 1,
          "issues": [
            {
              "code": "L2_CF_1",
              "analysis": "[SA] Presence of calls - Inline either by compiler or by hand and use SVML for libm calls. There are 1 issues (= calls) costing 1 point each.",
              "score": 1,
            }
          ]
        }
      ]
    }
  ]
}
